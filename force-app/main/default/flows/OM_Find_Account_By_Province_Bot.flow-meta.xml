<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>58.0</apiVersion>
    <assignments>
        <name>Count</name>
        <label>Count</label>
        <locationX>396</locationX>
        <locationY>758</locationY>
        <assignmentItems>
            <assignToReference>NamesCount</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Count_1</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Office_Name_To_List</name>
        <label>Office Name To List</label>
        <locationX>396</locationX>
        <locationY>1166</locationY>
        <assignmentItems>
            <assignToReference>OficinasNameToReturn</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Office_Names</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Office_Names</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Oficinas_Name_List</name>
        <label>Oficinas Name List</label>
        <locationX>264</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>oficinaName</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Account_Records.Name</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Account_Records</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Separate_Values</name>
        <label>Separate Values</label>
        <locationX>264</locationX>
        <locationY>974</locationY>
        <assignmentItems>
            <assignToReference>OficinasNameToReturn</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>, </stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Office_Name_To_List</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Count_1</name>
        <label>Count 1</label>
        <locationX>396</locationX>
        <locationY>866</locationY>
        <defaultConnector>
            <targetReference>Office_Name_To_List</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Count_greather_1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>NamesCount</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>1.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Separate_Values</targetReference>
            </connector>
            <label>Count greather 1</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>Find Account By Province Bot {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Find Account By Province Bot</label>
    <loops>
        <name>Account_Records</name>
        <label>Account Records</label>
        <locationX>176</locationX>
        <locationY>350</locationY>
        <collectionReference>OficinasByProvince</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Oficinas_Name_List</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Office_Names</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Office_Names</name>
        <label>Office Names</label>
        <locationX>176</locationX>
        <locationY>650</locationY>
        <collectionReference>oficinaName</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Count</targetReference>
        </nextValueConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Records</name>
        <label>Get Records</label>
        <locationX>176</locationX>
        <locationY>242</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Account_Records</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>BillingState</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>ProvinceToFind</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Obtain_Record_Type_ID.Id</elementReference>
            </value>
        </filters>
        <object>Account</object>
        <outputReference>OficinasByProvince</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Name</queriedFields>
    </recordLookups>
    <recordLookups>
        <name>Obtain_Record_Type_ID</name>
        <label>Obtain Record Type ID</label>
        <locationX>176</locationX>
        <locationY>134</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Records</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Account</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Oficina</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Obtain_Record_Type_ID</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <description>Count Number Office in Province</description>
        <name>NamesCount</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <name>oficinaName</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>OficinasByProvince</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Account</objectType>
    </variables>
    <variables>
        <name>OficinasNameToReturn</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>ProvinceToFind</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
